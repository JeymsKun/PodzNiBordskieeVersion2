{"ast":null,"code":"const searchInput = document.querySelector('.search-input');\nconst searchSuggestions = document.querySelector('.suggestions-search');\n\n// Initially hide the suggestions element (optional)\nsearchSuggestions === null || searchSuggestions === void 0 ? void 0 : searchSuggestions.classList.add('hidden');\ndocument.addEventListener('DOMContentLoaded', () => {\n  searchInput.addEventListener('input', e => {\n    const userInput = e.target.value.trim();\n    if (searchSuggestions) {\n      // Check if searchSuggestions exists before accessing it\n      if (userInput.length > 0) {\n        searchSuggestions.classList.remove('hidden');\n        fetch('/data/foods.json').then(response => response.json()).then(data => {\n          // ... rest of your code that filters data and populates suggestions\n        });\n      } else {\n        searchSuggestions.classList.add('hidden');\n      }\n    } else {\n      console.error(\"Search suggestions element not found. Check selector.\");\n    }\n  });\n});","map":{"version":3,"names":["searchInput","document","querySelector","searchSuggestions","classList","add","addEventListener","e","userInput","target","value","trim","length","remove","fetch","then","response","json","data","console","error"],"sources":["C:/Users/Maser/PodzNiBordskiee/project-podzniborskiee-vertwo/src/scripts/Search.js"],"sourcesContent":["const searchInput = document.querySelector('.search-input');\r\nconst searchSuggestions = document.querySelector('.suggestions-search');\r\n\r\n// Initially hide the suggestions element (optional)\r\nsearchSuggestions?.classList.add('hidden');\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  searchInput.addEventListener('input', (e) => {\r\n    const userInput = e.target.value.trim();\r\n\r\n    if (searchSuggestions) { // Check if searchSuggestions exists before accessing it\r\n      if (userInput.length > 0) {\r\n        searchSuggestions.classList.remove('hidden');\r\n\r\n        fetch('/data/foods.json')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            // ... rest of your code that filters data and populates suggestions\r\n          });\r\n      } else {\r\n        searchSuggestions.classList.add('hidden');\r\n      }\r\n    } else {\r\n      console.error(\"Search suggestions element not found. Check selector.\");\r\n    }\r\n  });\r\n});\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC;AAC3D,MAAMC,iBAAiB,GAAGF,QAAQ,CAACC,aAAa,CAAC,qBAAqB,CAAC;;AAEvE;AACAC,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;AAE1CJ,QAAQ,CAACK,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClDN,WAAW,CAACM,gBAAgB,CAAC,OAAO,EAAGC,CAAC,IAAK;IAC3C,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC;IAEvC,IAAIR,iBAAiB,EAAE;MAAE;MACvB,IAAIK,SAAS,CAACI,MAAM,GAAG,CAAC,EAAE;QACxBT,iBAAiB,CAACC,SAAS,CAACS,MAAM,CAAC,QAAQ,CAAC;QAE5CC,KAAK,CAAC,kBAAkB,CAAC,CACtBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;UACZ;QAAA,CACD,CAAC;MACN,CAAC,MAAM;QACLf,iBAAiB,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;MAC3C;IACF,CAAC,MAAM;MACLc,OAAO,CAACC,KAAK,CAAC,uDAAuD,CAAC;IACxE;EACF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}