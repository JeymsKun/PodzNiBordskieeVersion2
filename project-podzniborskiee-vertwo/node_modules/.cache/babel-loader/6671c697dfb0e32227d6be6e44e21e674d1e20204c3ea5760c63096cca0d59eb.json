{"ast":null,"code":"var _jsxFileName = \"D:\\\\PodzNiBordskiee\\\\project-podzniborskiee-vertwo\\\\src\\\\components\\\\Food.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useParams } from 'react-router-dom';\nimport foodsData from '../data/foods';\nimport '../css/food-details-style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Food() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [food, setFood] = useState(null);\n  useEffect(() => {\n    const selectedFood = foodsData.find(food => food.id === parseInt(id));\n    setFood(selectedFood);\n  }, [id]);\n  if (!food) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Food not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  const instructionsHTML = food.instructions.map((instruction, index) => {\n    const sentences = instruction.split('. ');\n    const numberedSentences = sentences.map((sentence, i) => {\n      const number = i === 0 ? index + 1 : '';\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [number ? number + '. ' : '', sentence]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    });\n    return numberedSentences;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"style\", {\n        children: `\n          \n        `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-details-container container-food-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"food-name\",\n        children: food.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"food-image\",\n        src: food.image,\n        alt: food.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"food-description\",\n        children: food.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ingredients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"food-ingredients\",\n        children: food.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ingredient\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instructions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"food-instructions\",\n        children: instructionsHTML\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Food, \"6PsMZc63Oc4m13SdsDz0fV7qOAU=\", false, function () {\n  return [useParams];\n});\n_c = Food;\nexport default Food;\nvar _c;\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"names":["React","useEffect","useState","Helmet","useParams","foodsData","jsxDEV","_jsxDEV","Food","_s","id","food","setFood","selectedFood","find","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","instructionsHTML","instructions","map","instruction","index","sentences","split","numberedSentences","sentence","i","number","className","name","src","image","alt","description","ingredients","ingredient","_c","$RefreshReg$"],"sources":["D:/PodzNiBordskiee/project-podzniborskiee-vertwo/src/components/Food.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useParams } from 'react-router-dom';\r\nimport foodsData from '../data/foods';\r\nimport '../css/food-details-style.css';\r\n\r\nfunction Food() {\r\n  const { id } = useParams();\r\n  const [food, setFood] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const selectedFood = foodsData.find((food) => food.id === parseInt(id));\r\n    setFood(selectedFood);\r\n  }, [id]);\r\n\r\n  if (!food) {\r\n    return <div>Food not found</div>;\r\n  }\r\n\r\n  const instructionsHTML = food.instructions.map((instruction, index) => {\r\n    const sentences = instruction.split('. ');\r\n    const numberedSentences = sentences.map((sentence, i) => {\r\n      const number = i === 0 ? index + 1 : '';\r\n      return (\r\n        <p key={i}>\r\n          {number ? number + '. ' : ''}\r\n          {sentence}\r\n        </p>\r\n      );\r\n    });\r\n    return numberedSentences;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <style>{`\r\n          \r\n        `}</style>\r\n      </Helmet>\r\n      <div className=\"food-details-container container-food-details\">\r\n        <h1 id=\"food-name\">{food.name}</h1>\r\n        <img id=\"food-image\" src={food.image} alt={food.name} />\r\n        <p id=\"food-description\">{food.description}</p>\r\n        <h2>Ingredients:</h2>\r\n        <ul id=\"food-ingredients\">\r\n          {food.ingredients.map((ingredient, index) => (\r\n            <li key={index}>{ingredient}</li>\r\n          ))}\r\n        </ul>\r\n        <h2>Instructions:</h2>\r\n        <div id=\"food-instructions\">{instructionsHTML}</div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Food;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}